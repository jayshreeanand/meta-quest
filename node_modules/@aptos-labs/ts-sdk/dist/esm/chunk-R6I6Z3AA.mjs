import{a as o,b as A}from"./chunk-CGTMSLVZ.mjs";import{a as u}from"./chunk-MY2BEHYF.mjs";import{d as e}from"./chunk-5WWU3WSU.mjs";import{g as a}from"./chunk-6VGLRQBT.mjs";import{k as c}from"./chunk-CU6HQJSE.mjs";import{b as s}from"./chunk-RXHER6EA.mjs";import{sha3_256 as d}from"@noble/hashes/sha3";var g=class p extends u{constructor({signer:t,accountAddress:n,authenticationFunction:i}){super();this.signingScheme=2;if(!c(i))throw new Error(`Invalid authentication function ${i} passed into AbstractedAccount`);this.authenticationFunction=i,this.accountAddress=n,this.publicKey=new A(this.accountAddress),this.sign=r=>new o(t(r))}static fromPermissionedSigner({signer:t,accountAddress:n}){return new p({signer:i=>{let r=new s;return t.publicKey.serialize(r),t.sign(i).serialize(r),r.toUint8Array()},accountAddress:n??t.accountAddress,authenticationFunction:"0x1::permissioned_delegation::authenticate"})}signWithAuthenticator(t){return new a(this.authenticationFunction,d(t),this.sign(d(t)).toUint8Array())}signTransactionWithAuthenticator(t){return this.signWithAuthenticator(e(t))}signTransaction(t){return this.sign(e(t))}setSigner(t){this.sign=n=>new o(t(n))}};export{g as a};
//# sourceMappingURL=chunk-R6I6Z3AA.mjs.map