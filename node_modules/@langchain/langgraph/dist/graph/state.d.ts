import { RunnableLike } from "@langchain/core/runnables";
import { BaseChannel } from "../channels/base.js";
import { BinaryOperator } from "../channels/binop.js";
import { Graph } from "./graph.js";
import { BaseCheckpointSaver } from "../checkpoint/base.js";
import { Pregel } from "../pregel/index.js";
export declare const START = "__start__";
export interface StateGraphArgs<Channels extends Record<string, any>> {
    channels: {
        [K in keyof Channels]: {
            value: BinaryOperator<Channels[K]> | null;
            default?: () => Channels[K];
        };
    } | {
        value: BinaryOperator<unknown> | null;
        default?: () => unknown;
    };
}
export declare class StateGraph<Channels extends Record<string, any>> extends Graph<Channels> {
    channels: Record<string, BaseChannel>;
    constructor(fields: StateGraphArgs<Channels>);
    addNode(key: string, action: RunnableLike): void;
    compile(checkpointer?: BaseCheckpointSaver): Pregel;
}
